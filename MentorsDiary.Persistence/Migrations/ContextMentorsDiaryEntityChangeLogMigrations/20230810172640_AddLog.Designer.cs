// <auto-generated />
using System;
using MentorsDiary.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MentorsDiary.Persistence.Migrations.ContextMentorsDiaryEntityChangeLogMigrations
{
    [DbContext(typeof(ContextMentorsDiaryEntityChangeLog))]
    [Migration("20230810172640_AddLog")]
    partial class AddLog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MentorsDiary.Application.Entities.EntityChangelog.EntityChangelog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ChangeTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EntityChangeType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserIpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("EntityChangeLogs");
                });

            modelBuilder.Entity("MentorsDiary.Application.Entities.EntityChangelog.EntityPropertyChangeLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EntityChangeLogId")
                        .HasColumnType("bigint");

                    b.Property<string>("NewValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValueDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValueDiscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EntityChangeLogId");

                    b.HasIndex("Id");

                    b.ToTable("EntityPropertyChangeLogs");
                });

            modelBuilder.Entity("MentorsDiary.Application.Entities.EntityChangelog.EntityPropertyChangeLog", b =>
                {
                    b.HasOne("MentorsDiary.Application.Entities.EntityChangelog.EntityChangelog", "EntityChangeLog")
                        .WithMany("EntityPropertyChangeLogs")
                        .HasForeignKey("EntityChangeLogId");

                    b.Navigation("EntityChangeLog");
                });

            modelBuilder.Entity("MentorsDiary.Application.Entities.EntityChangelog.EntityChangelog", b =>
                {
                    b.Navigation("EntityPropertyChangeLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
